from aiogram import Router, types
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

router = Router()

class Anketa(StatesGroup):
    name = State()
    age = State()
    city = State()
    photo = State()
    goal = State()
    radius = State()

@router.message(lambda m: m.text == "üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
async def start_anketa(message: types.Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    await state.set_state(Anketa.name)

@router.message(Anketa.name)
async def anketa_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:")
    await state.set_state(Anketa.age)

@router.message(Anketa.age)
async def anketa_age(message: types.Message, state: FSMContext):
    await state.update_data(age=message.text)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:")
    await state.set_state(Anketa.city)

@router.message(Anketa.city)
async def anketa_city(message: types.Message, state: FSMContext):
    await state.update_data(city=message.text)
    await message.answer("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é:")
    await state.set_state(Anketa.photo)

@router.message(Anketa.photo)
async def anketa_photo(message: types.Message, state: FSMContext):
    if not message.photo:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ.")
        return
    file_id = message.photo[-1].file_id
    await state.update_data(photo=file_id)
    await message.answer("–ö–∞–∫–∞—è —Ü–µ–ª—å –≤–∞—à–µ–≥–æ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞?")
    await state.set_state(Anketa.goal)

@router.message(Anketa.goal)
async def anketa_goal(message: types.Message, state: FSMContext):
    await state.update_data(goal=message.text)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ —Ä–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ (–≤ –∫–º):")
    await state.set_state(Anketa.radius)

@router.message(Anketa.radius)
async def anketa_radius(message: types.Message, state: FSMContext):
    await state.update_data(radius=message.text)
    data = await state.get_data()
    await message.answer(
        f"–ê–Ω–∫–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!\n"
        f"–ò–º—è: {data['name']}\n"
        f"–í–æ–∑—Ä–∞—Å—Ç: {data['age']}\n"
        f"–ì–æ—Ä–æ–¥: {data['city']}\n"
        f"–¶–µ–ª—å: {data['goal']}\n"
        f"–†–∞–¥–∏—É—Å: {data['radius']} –∫–º"
    )
    await state.clear()
