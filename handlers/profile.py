from aiogram import Router
from aiogram.types import Message
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from utils.store import get_profile, log

router = Router()

class ProfileFSM(StatesGroup):
    name = State()
    age = State()
    city = State()
    interests = State()

@router.message(lambda m: (m.text or '').strip() in {'üìù –ú–æ—è –∞–Ω–∫–µ—Ç–∞','–ú–æ—è –∞–Ω–∫–µ—Ç–∞','–ê–Ω–∫–µ—Ç–∞'})
async def profile_start(m: Message, state: FSMContext):
    await m.answer("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    await state.set_state(ProfileFSM.name)

@router.message(ProfileFSM.name)
async def profile_name(m: Message, state: FSMContext):
    p = get_profile(m.from_user.id)
    p.name = (m.text or '').strip()
    await m.answer("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
    await state.set_state(ProfileFSM.age)

@router.message(ProfileFSM.age)
async def profile_age(m: Message, state: FSMContext):
    p = get_profile(m.from_user.id)
    p.age = (m.text or '').strip()
    await m.answer("–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ç—ã?")
    await state.set_state(ProfileFSM.city)

@router.message(ProfileFSM.city)
async def profile_city(m: Message, state: FSMContext):
    p = get_profile(m.from_user.id)
    p.city = (m.text or '').strip()
    await m.answer("–ò–Ω—Ç–µ—Ä–µ—Å—ã (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):")
    await state.set_state(ProfileFSM.interests)

@router.message(ProfileFSM.interests)
async def profile_interests(m: Message, state: FSMContext):
    p = get_profile(m.from_user.id)
    p.interests = (m.text or '').strip()
    await state.clear()
    await m.answer(f"–ê–Ω–∫–µ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!\n–ò–º—è: {p.name}\n–í–æ–∑—Ä–∞—Å—Ç: {p.age}\n–ì–æ—Ä–æ–¥: {p.city}\n–ò–Ω—Ç–µ—Ä–µ—Å—ã: {p.interests}")
    log(f"profile saved for {m.from_user.id}")
